#!/usr/bin/python3
#	rfc6238 - RFC6238-compliant TOTP token generator with Steam Authenticator support
#	Copyright (C) 2020-2020 Johannes Bauer
#
#	This file is part of rfc6238.
#
#	rfc6238 is free software; you can redistribute it and/or modify
#	it under the terms of the GNU General Public License as published by
#	the Free Software Foundation; this program is ONLY licensed under
#	version 3 of the License, later versions are explicitly excluded.
#
#	rfc6238 is distributed in the hope that it will be useful,
#	but WITHOUT ANY WARRANTY; without even the implied warranty of
#	MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#	GNU General Public License for more details.
#
#	You should have received a copy of the GNU General Public License
#	along with rfc6238; if not, write to the Free Software
#	Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
#
#	Johannes Bauer <JohannesBauer@gmx.de>

import sys
import os
import subprocess
from FriendlyArgumentParser import FriendlyArgumentParser
from Account import Account

run_dir = os.path.dirname(os.path.realpath(__file__))
default_accounts_file = run_dir + "/accounts.json"

parser = FriendlyArgumentParser(description = "Export account QR code")
parser.add_argument("-d", "--token-db", metavar = "filename", type = str, default = default_accounts_file, help = "Specifies accounts file to use, a JSON file which stores all secrets. Defaults to %(default)s.")
parser.add_argument("name", metavar = "name", type = str, help = "Name of account to export to QR code.")

args = parser.parse_args(sys.argv[1:])
accounts = Account.load_accounts_from_file(args.token_db)

for account in accounts:
	if args.name.lower() in account.name.lower():
		png_filename = "export_%s.png" % (account.name.replace(" ", "_"))
		subprocess.check_call([ "qrencode", "-o%s" % (png_filename), "-d", "150", "-s", "10", account.uri ])
